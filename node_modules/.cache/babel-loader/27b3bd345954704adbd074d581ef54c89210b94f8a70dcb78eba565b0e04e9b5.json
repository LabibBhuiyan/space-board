{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Banon\\\\Desktop\\\\space-board\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRocket, faFlag } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boardSize = 10;\nconst App = () => {\n  _s();\n  const [playerCoordinates, setPlayerCoordinates] = useState([0, 0]);\n  const [stepCount, setStepCount] = useState(0);\n  const [isMoving, setIsMoving] = useState(false);\n  const board = Array(boardSize).fill(null).map(() => Array(boardSize).fill(null));\n  const isStartSquare = (row, col) => row === 0 && col === 0;\n  const isEndSquare = (row, col) => row === boardSize - 1 && col === boardSize - 1;\n  const rollDice = () => Math.floor(Math.random() * 6) + 1;\n  const movePlayer = () => {\n    setIsMoving(true);\n    let steps = rollDice();\n    const [currentRow, currentCol] = playerCoordinates;\n    let newRow = currentRow;\n    let newCol = currentCol + steps;\n    if (newCol >= boardSize) {\n      newRow += Math.floor(newCol / boardSize);\n      newCol %= boardSize;\n    }\n    if (newRow >= boardSize) {\n      newRow = boardSize - 1;\n      newCol = boardSize - 1;\n    }\n    setPlayerCoordinates([newRow, newCol]);\n    setStepCount(stepCount + steps);\n    setTimeout(() => {\n      setIsMoving(false);\n    }, 1000);\n  };\n  const renderBoard = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${isStartSquare(rowIndex, colIndex) ? 'start' : ''} ${isEndSquare(rowIndex, colIndex) ? 'end' : ''}`,\n            style: {\n              backgroundImage: `url(space-background.png)`\n            },\n            children: [isStartSquare(rowIndex, colIndex) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `player-icon ${isMoving ? 'moving' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faRocket\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), isEndSquare(rowIndex, colIndex) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"end\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faFlag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)]\n          }, colIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Board Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Step Count: \", stepCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), renderBoard(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"roll-dice-button\",\n        onClick: movePlayer,\n        children: \"Roll Dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"raYfajk5Y4X52sY8pITNYuXlzFI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faRocket","faFlag","jsxDEV","_jsxDEV","boardSize","App","_s","playerCoordinates","setPlayerCoordinates","stepCount","setStepCount","isMoving","setIsMoving","board","Array","fill","map","isStartSquare","row","col","isEndSquare","rollDice","Math","floor","random","movePlayer","steps","currentRow","currentCol","newRow","newCol","setTimeout","renderBoard","className","children","rowIndex","cell","colIndex","style","backgroundImage","icon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Banon/Desktop/space-board/src/components/Board.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRocket, faFlag } from '@fortawesome/free-solid-svg-icons';\r\nimport './App.css';\r\n\r\nconst boardSize = 10;\r\n\r\nconst App = () => {\r\n  const [playerCoordinates, setPlayerCoordinates] = useState([0, 0]);\r\n  const [stepCount, setStepCount] = useState(0);\r\n  const [isMoving, setIsMoving] = useState(false);\r\n\r\n  const board = Array(boardSize)\r\n    .fill(null)\r\n    .map(() => Array(boardSize).fill(null));\r\n\r\n  const isStartSquare = (row, col) => row === 0 && col === 0;\r\n  const isEndSquare = (row, col) => row === boardSize - 1 && col === boardSize - 1;\r\n\r\n  const rollDice = () => Math.floor(Math.random() * 6) + 1;\r\n\r\n  const movePlayer = () => {\r\n    setIsMoving(true);\r\n    let steps = rollDice();\r\n    const [currentRow, currentCol] = playerCoordinates;\r\n\r\n    let newRow = currentRow;\r\n    let newCol = currentCol + steps;\r\n\r\n    if (newCol >= boardSize) {\r\n      newRow += Math.floor(newCol / boardSize);\r\n      newCol %= boardSize;\r\n    }\r\n\r\n    if (newRow >= boardSize) {\r\n      newRow = boardSize - 1;\r\n      newCol = boardSize - 1;\r\n    }\r\n\r\n    setPlayerCoordinates([newRow, newCol]);\r\n    setStepCount(stepCount + steps);\r\n\r\n    setTimeout(() => {\r\n      setIsMoving(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const renderBoard = () => {\r\n    return (\r\n      <div className=\"board\">\r\n        <div className=\"game-board\">\r\n          {board.map((row, rowIndex) => (\r\n            <div className=\"row\" key={rowIndex}>\r\n              {row.map((cell, colIndex) => (\r\n                <div\r\n                  className={`cell ${isStartSquare(rowIndex, colIndex) ? 'start' : ''} ${\r\n                    isEndSquare(rowIndex, colIndex) ? 'end' : ''\r\n                  }`}\r\n                  key={colIndex}\r\n                  style={{ backgroundImage: `url(space-background.png)` }}\r\n                >\r\n                  {isStartSquare(rowIndex, colIndex) && (\r\n                    <div className={`player-icon ${isMoving ? 'moving' : ''}`}>\r\n                      <FontAwesomeIcon icon={faRocket} />\r\n                    </div>\r\n                  )}\r\n                  {isEndSquare(rowIndex, colIndex) && (\r\n                    <div className=\"end\">\r\n                      <FontAwesomeIcon icon={faFlag} />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Board Game</h1>\r\n      <p>Step Count: {stepCount}</p>\r\n      {renderBoard()}\r\n      <div className=\"button-container\">\r\n        <button className=\"roll-dice-button\" onClick={movePlayer}>\r\n          Roll Dice\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}